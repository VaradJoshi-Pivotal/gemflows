<h1>Gem Flows</h1>

<div id="servergroups" style="min-width: 310px; height: 300px; margin: 0 auto">
    <table cellpadding="0" cellspacing="0" border="0" class="display" id="serverGroupsTable" width="100%">
        <thead>
            <tr>
                <th>ID</th>
                <th>ServerGroups</th>
            </tr>
        </thead>
        <tbody> </tbody>
    </table>
</div>

<div id="flows"> </div>
<div id="servers" style="height: 100%; width: 100%; position:absolute;"> </div>

<script type="text/template" id="flowsTemplate">
	<div>
		{{ for(var idx in flows) { }}
            {{ var dep = flows[idx].deploy_descriptor; }}
            {{ var flowObj = JSON.parse(flows[idx].deploy_descriptor); }}
            <p> Flow Name: {{=flowObj.flowName}} </p>
            <p> Log Interval: {{=flowObj.logInterval}} </p>
			<table cellpadding="3" cellspacing="3" border="2" class="display" id="{{=flowObj.flowName}}Table" width="100%">
				<thead>
					<tr>
                        <th>Node</th>
                        <th>Deploy Group</th>
					</tr>
				</thead>
				<tbody>
                    {{ var p = flowObj.nodes; }}
                    {{ for (var key in p) { }}
                        {{ if (p.hasOwnProperty(key) && p[key].deployGroup ) { }}
					<tr>
							<td class=center>{{=key}}</td>
							<td class=center>{{=p[key].deployGroup}}</td>
					</tr>
                        {{ } }}
                    {{ } }}
				</tbody>
			</table>
		{{ } }}
	</div>
</script>


<script type="text/javascript">
$(document).ready(function() {
    // Underscore.js Template Settings
    _.templateSettings = {
        interpolate: /\{\{\=(.+?)\}\}/g,
        evaluate: /\{\{(.+?)\}\}/g
    };

	var table = $('#serverGroupsTable');
	table.dataTable({
        "ajax": {
            "url": "/getservergroups",
            "dataSrc": "servers",
            "type": "GET"
        }
    });

    getFlows();

	function getFlows() {
		$.ajax({
  				type: 'GET',
  				url:  '/getflows',
  				data: {},
  				dataType : "json",
  				success: function (data) {
   					if (data.error) {
    					onFlowsError(data.error);
   					} 
   					else {
    					onFlowsSuccess(data);
   					}
				}
			   });
        return false;
	}
	
	function onFlowsError(error) {
	}

	function onFlowsSuccess(data) {
        template = _.template($('#flowsTemplate').html());
        var str = template(data);
        $('#flows').html(str);
		for(var idx in data.flows) {
            var flowObj = JSON.parse(data.flows[idx].deploy_descriptor);
            var flowTableName = flowObj.flowName + "Table";
	        var table = $(flowTableName);
	        table.dataTable({});
        }
        return false;
	}

$('#servers').cytoscape({
  style: [
    {
      selector: 'node',
      css: {
        'content': 'data(id)',
        'text-valign': 'center',
        'text-halign': 'center'
      }
    },
    {
      selector: '$node > node',
      css: {
        'padding-top': '20px',
        'padding-left': '10px',
        'padding-bottom': '10px',
        'padding-right': '10px',
        'text-valign': 'top',
        'text-halign': 'center'
      }
    },
    {
      selector: 'edge',
      css: {
        'target-arrow-shape': 'triangle'
      }
    },
    {
      selector: ':selected',
      css: {
        'background-color': 'black',
        'line-color': 'black',
        'target-arrow-color': 'black',
        'source-arrow-color': 'black'
      }
    }
  ],
  
  elements: {
    nodes: [
      { data: { id: 'localhost(2766)<v1>:52021' } },
      { data: { id: 'localhost(2779)<v2>:20173' } },
      { data: { id: 'localhost(2792)<v3>:39381' } },
      { data: { id: 'localhost(2805)<v4>:16699' } },
      { data: { id: 'sentences', parent: 'localhost(2766)<v1>:52021' } },
      { data: { id: 'shuffle_sender', parent: 'localhost(2766)<v1>:52021' } },
      { data: { id: 'shuffle_receiver1', parent: 'localhost(2779)<v2>:20173' } },
      { data: { id: 'shuffle_receiver2', parent: 'localhost(2792)<v3>:39381' } },
      { data: { id: 'split1', parent: 'localhost(2779)<v2>:20173' } },
      { data: { id: 'split2', parent: 'localhost(2792)<v3>:39381' } },
      { data: { id: 'byWord_sender1', parent: 'localhost(2779)<v2>:20173' } },
      { data: { id: 'byWord_sender2', parent: 'localhost(2792)<v3>:39381' } },
      { data: { id: 'byWord_receiver', parent: 'localhost(2805)<v4>:16699' } },
      { data: { id: 'count', parent: 'localhost(2805)<v4>:16699' } }
    ],
    edges: [
      { data: { id: 'shuffle1', source: 'shuffle_sender', target: 'shuffle_receiver1' } },
      { data: { id: 'shuffle2', source: 'shuffle_sender', target: 'shuffle_receiver2' } },
      { data: { id: 'byWord1', source: 'byWord_sender1', target: 'byWord_receiver' } },
      { data: { id: 'byWord2', source: 'byWord_sender2', target: 'byWord_receiver' } }
    ]
  },
  
  layout: {
    name: 'cose',
    padding: 5
  },
  
  ready: function(){
    window.cy = this;
  }
});


} );
</script>
